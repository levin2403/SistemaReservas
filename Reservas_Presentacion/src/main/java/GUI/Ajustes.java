/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Fachada.HorarioRestauranteFCD;
import DTOs.RestauranteDTO;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

/**
 *
 * @author Sebastian Murrieta Verduzco - 233463
 */
public class Ajustes extends javax.swing.JFrame {

    /**
     * Creates new form Ajustes
     */
    public Ajustes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tituloPn = new Control.PanelRound();
        jLabel1 = new javax.swing.JLabel();
        horaInicioTimePicker = new com.raven.swing.TimePicker();
        jLabel9 = new javax.swing.JLabel();
        regresarBtn = new javax.swing.JButton();
        establecerHorarioBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        horaCierreTimePicker = new com.raven.swing.TimePicker();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tituloPn.setBackground(new java.awt.Color(51, 51, 51));
        tituloPn.setCursorHandEnabled(true);
        tituloPn.setMinimumSize(new java.awt.Dimension(320, 90));
        tituloPn.setRoundBottomLeft(50);
        tituloPn.setRoundBottomRight(50);
        tituloPn.setRoundTopLeft(50);
        tituloPn.setRoundTopRight(50);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Ajustes");

        javax.swing.GroupLayout tituloPnLayout = new javax.swing.GroupLayout(tituloPn);
        tituloPn.setLayout(tituloPnLayout);
        tituloPnLayout.setHorizontalGroup(
            tituloPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tituloPnLayout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addComponent(jLabel1)
                .addContainerGap(184, Short.MAX_VALUE))
        );
        tituloPnLayout.setVerticalGroup(
            tituloPnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tituloPnLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        getContentPane().add(tituloPn, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 480, -1));

        horaInicioTimePicker.setForeground(new java.awt.Color(102, 102, 102));
        getContentPane().add(horaInicioTimePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, -1, 290));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Horario restaurante");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 140, -1, -1));

        regresarBtn.setBackground(new java.awt.Color(102, 102, 102));
        regresarBtn.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        regresarBtn.setForeground(new java.awt.Color(255, 255, 255));
        regresarBtn.setText("Regresar");
        regresarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarBtnActionPerformed(evt);
            }
        });
        getContentPane().add(regresarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 540, 150, 50));

        establecerHorarioBtn.setBackground(new java.awt.Color(102, 102, 102));
        establecerHorarioBtn.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        establecerHorarioBtn.setForeground(new java.awt.Color(255, 255, 255));
        establecerHorarioBtn.setText("Establecer");
        establecerHorarioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                establecerHorarioBtnActionPerformed(evt);
            }
        });
        getContentPane().add(establecerHorarioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 610, 150, 50));

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Horario de apertura");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, -1, -1));

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Horario de cierre");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 200, -1, -1));

        horaCierreTimePicker.setForeground(new java.awt.Color(102, 102, 102));
        getContentPane().add(horaCierreTimePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 230, -1, 290));

        jPanel1.setBackground(new java.awt.Color(22, 22, 22));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void regresarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarBtnActionPerformed
        new Admistrador().setVisible(true);
        dispose();
    }//GEN-LAST:event_regresarBtnActionPerformed

    private void establecerHorarioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_establecerHorarioBtnActionPerformed
        // Obtener la hora seleccionada en los TimePickers
        String horaInicio = horaInicioTimePicker.getSelectedTime();
        String horaCierre = horaCierreTimePicker.getSelectedTime();

        System.out.println("Hora de inicio: '" + horaInicio + "' (Longitud: " + horaInicio.length() + ")");
        System.out.println("Hora de cierre: '" + horaCierre + "' (Longitud: " + horaCierre.length() + ")");

// Verificar que ambas horas no sean nulas antes de continuar
        if (horaInicio != null && horaCierre != null) {
            try {
                // Trim de las cadenas
                horaInicio = horaInicio.trim();
                horaCierre = horaCierre.trim();

                // Crear un formato que coincida con la salida de getSelectedTime
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("hh:mm a");

                // Convertir las horas de String a LocalTime usando un formato adecuado
                LocalTime apertura = LocalTime.parse(horaInicio, formatter);
                LocalTime cierre = LocalTime.parse(horaCierre, formatter);

                // Crear un objeto RestauranteDTO (puedes reemplazar con el restaurante actual)
                RestauranteDTO restaurante = new RestauranteDTO();
                HorarioRestauranteFCD fachadaHorario = new HorarioRestauranteFCD();

                // Establecer el horario de apertura y cierre usando la fachada
                fachadaHorario.establecerHoraApertura(restaurante, "");
                fachadaHorario.establecerHoraCierre(restaurante, cierre);

                // Confirmación en consola
                System.out.println("Horario de apertura: " + restaurante.getHoraApertura());
                System.out.println("Horario de cierre: " + restaurante.getHoraCierre());

            } catch (DateTimeParseException e) {
                System.out.println("Formato de hora no válido. Por favor, ingresa un formato válido de hora.");
            }
        } else {
            // Manejar el caso donde el usuario no seleccionó alguna hora
            System.out.println("Por favor, selecciona ambas horas de apertura y cierre.");
        }


    }//GEN-LAST:event_establecerHorarioBtnActionPerformed
    /**
     * El método principal que sirve como punto de entrada para la aplicación.
     * Establece la apariencia de la aplicación y muestra la ventana principal
     * del administrador.
     *
     * @param args los argumentos de línea de comandos
     */
    public static void main(String args[]) {
        /* Establecer la apariencia Nimbus */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admistrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admistrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admistrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admistrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Crear y mostrar la ventana */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ajustes().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton establecerHorarioBtn;
    private com.raven.swing.TimePicker horaCierreTimePicker;
    private com.raven.swing.TimePicker horaInicioTimePicker;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton regresarBtn;
    private Control.PanelRound tituloPn;
    // End of variables declaration//GEN-END:variables
}
